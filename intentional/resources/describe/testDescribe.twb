<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1110.1623                               -->
<workbook original-version='18.1' source-build='2020.3.3 (20203.20.1110.1623)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='time' inline='true' name='federated.0rx6gh51oaq0w71bple9h1urt0jj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='time' name='textscan.1peu69w0hgeinl14ei0oc1fnu8oe'>
            <connection class='textscan' directory='C:/Users/matteo.francia5/Documents/repos/experiments-assess/intentional/resources/describe' filename='time.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1peu69w0hgeinl14ei0oc1fnu8oe' name='time.csv' table='[time#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=',' text-qualifier='&quot;'>
            <column datatype='integer' name='cardinality' ordinal='0' />
            <column datatype='real' name='coverage' ordinal='1' />
            <column datatype='string' name='dataset' ordinal='2' />
            <column datatype='string' name='executionplan' ordinal='3' />
            <column datatype='integer' name='id' ordinal='4' />
            <column datatype='string' name='intention' ordinal='5' />
            <column datatype='integer' name='intention_characters' ordinal='6' />
            <column datatype='real' name='intersection' ordinal='7' />
            <column datatype='integer' name='pivot_time' ordinal='8' />
            <column datatype='real' name='query_bytes' ordinal='9' />
            <column datatype='real' name='query_characters' ordinal='10' />
            <column datatype='real' name='query_cost' ordinal='11' />
            <column datatype='real' name='query_rows' ordinal='12' />
            <column datatype='integer' name='run' ordinal='13' />
            <column datatype='string' name='sessionid' ordinal='14' />
            <column datatype='integer' name='time_interest' ordinal='15' />
            <column datatype='integer' name='time_model' ordinal='16' />
            <column datatype='integer' name='time_query' ordinal='17' />
            <column datatype='string' name='version' ordinal='18' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1peu69w0hgeinl14ei0oc1fnu8oe' name='time.csv' table='[time#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=',' text-qualifier='&quot;'>
            <column datatype='integer' name='cardinality' ordinal='0' />
            <column datatype='real' name='coverage' ordinal='1' />
            <column datatype='string' name='dataset' ordinal='2' />
            <column datatype='string' name='executionplan' ordinal='3' />
            <column datatype='integer' name='id' ordinal='4' />
            <column datatype='string' name='intention' ordinal='5' />
            <column datatype='integer' name='intention_characters' ordinal='6' />
            <column datatype='real' name='intersection' ordinal='7' />
            <column datatype='integer' name='pivot_time' ordinal='8' />
            <column datatype='real' name='query_bytes' ordinal='9' />
            <column datatype='real' name='query_characters' ordinal='10' />
            <column datatype='real' name='query_cost' ordinal='11' />
            <column datatype='real' name='query_rows' ordinal='12' />
            <column datatype='integer' name='run' ordinal='13' />
            <column datatype='string' name='sessionid' ordinal='14' />
            <column datatype='integer' name='time_interest' ordinal='15' />
            <column datatype='integer' name='time_model' ordinal='16' />
            <column datatype='integer' name='time_query' ordinal='17' />
            <column datatype='string' name='version' ordinal='18' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[time.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='quote-char'>&quot;\&quot;&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardinality</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cardinality]</local-name>
            <parent-name>[time.csv]</parent-name>
            <remote-alias>cardinality</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coverage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coverage]</local-name>
            <parent-name>[time.csv]</parent-name>
            <remote-alias>coverage</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dataset</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dataset]</local-name>
            <parent-name>[time.csv]</parent-name>
            <remote-alias>dataset</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>executionplan</remote-name>
            <remote-type>129</remote-type>
            <local-name>[executionplan]</local-name>
            <parent-name>[time.csv]</parent-name>
            <remote-alias>executionplan</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[time.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>intention</remote-name>
            <remote-type>129</remote-type>
            <local-name>[intention]</local-name>
            <parent-name>[time.csv]</parent-name>
            <remote-alias>intention</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>intention_characters</remote-name>
            <remote-type>20</remote-type>
            <local-name>[intention_characters]</local-name>
            <parent-name>[time.csv]</parent-name>
            <remote-alias>intention_characters</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>intersection</remote-name>
            <remote-type>5</remote-type>
            <local-name>[intersection]</local-name>
            <parent-name>[time.csv]</parent-name>
            <remote-alias>intersection</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pivot_time</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pivot_time]</local-name>
            <parent-name>[time.csv]</parent-name>
            <remote-alias>pivot_time</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>query_bytes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[query_bytes]</local-name>
            <parent-name>[time.csv]</parent-name>
            <remote-alias>query_bytes</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>query_characters</remote-name>
            <remote-type>5</remote-type>
            <local-name>[query_characters]</local-name>
            <parent-name>[time.csv]</parent-name>
            <remote-alias>query_characters</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>query_cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[query_cost]</local-name>
            <parent-name>[time.csv]</parent-name>
            <remote-alias>query_cost</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>query_rows</remote-name>
            <remote-type>5</remote-type>
            <local-name>[query_rows]</local-name>
            <parent-name>[time.csv]</parent-name>
            <remote-alias>query_rows</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>run</remote-name>
            <remote-type>20</remote-type>
            <local-name>[run]</local-name>
            <parent-name>[time.csv]</parent-name>
            <remote-alias>run</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sessionid</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sessionid]</local-name>
            <parent-name>[time.csv]</parent-name>
            <remote-alias>sessionid</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_interest</remote-name>
            <remote-type>20</remote-type>
            <local-name>[time_interest]</local-name>
            <parent-name>[time.csv]</parent-name>
            <remote-alias>time_interest</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_model</remote-name>
            <remote-type>20</remote-type>
            <local-name>[time_model]</local-name>
            <parent-name>[time.csv]</parent-name>
            <remote-alias>time_model</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_query</remote-name>
            <remote-type>20</remote-type>
            <local-name>[time_query]</local-name>
            <parent-name>[time.csv]</parent-name>
            <remote-alias>time_query</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>version</remote-name>
            <remote-type>129</remote-type>
            <local-name>[version]</local-name>
            <parent-name>[time.csv]</parent-name>
            <remote-alias>version</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Dati migrati' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Cardinality' datatype='integer' name='[cardinality]' role='dimension' type='ordinal' />
      <column datatype='real' name='[coverage]' role='measure' type='quantitative' />
      <column caption='Dataset' datatype='string' name='[dataset]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[intention_characters]' role='measure' type='quantitative' />
      <column caption='Pivot Time' datatype='integer' name='[pivot_time]' role='measure' type='quantitative' />
      <column datatype='real' name='[query_characters]' role='measure' type='quantitative' />
      <column caption='Time Interest' datatype='integer' name='[time_interest]' role='measure' type='quantitative' />
      <column caption='Time Model' datatype='integer' name='[time_model]' role='measure' type='quantitative' />
      <column caption='Time Query' datatype='integer' name='[time_query]' role='measure' type='quantitative' />
      <column datatype='string' name='[version]' role='dimension' type='nominal' />
      <column-instance column='[coverage]' derivation='Avg' name='[avg:coverage:qk]' pivot='key' type='quantitative' />
      <column-instance column='[intention_characters]' derivation='Avg' name='[avg:intention_characters:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pivot_time]' derivation='Avg' name='[avg:pivot_time:qk]' pivot='key' type='quantitative' />
      <column-instance column='[query_characters]' derivation='Avg' name='[avg:query_characters:qk]' pivot='key' type='quantitative' />
      <column-instance column='[time_interest]' derivation='Avg' name='[avg:time_interest:qk]' pivot='key' type='quantitative' />
      <column-instance column='[time_model]' derivation='Avg' name='[avg:time_model:qk]' pivot='key' type='quantitative' />
      <column-instance column='[time_query]' derivation='Avg' name='[avg:time_query:qk]' pivot='key' type='quantitative' />
      <column-instance column='[time_interest]' derivation='Count' name='[cnt:time_interest:qk]' pivot='key' type='quantitative' />
      <column-instance column='[time_interest]' derivation='Median' name='[med:time_interest:qk]' pivot='key' type='quantitative' />
      <column-instance column='[time_query]' derivation='Median' name='[med:time_query:qk]' pivot='key' type='quantitative' />
      <column-instance column='[version]' derivation='None' name='[none:version:nk]' pivot='key' type='nominal' />
      <column-instance column='[coverage]' derivation='Sum' name='[sum:coverage:qk]' pivot='key' type='quantitative' />
      <column-instance column='[intention_characters]' derivation='Sum' name='[sum:intention_characters:qk]' pivot='key' type='quantitative' />
      <column-instance column='[query_characters]' derivation='Sum' name='[sum:query_characters:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:intention_characters:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:pivot_time:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[sum:intention_characters:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:coverage:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[sum:coverage:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:time_query:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[med:time_query:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:query_characters:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[sum:query_characters:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:time_model:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:time_interest:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[cnt:time_interest:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[med:time_interest:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:version:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;adbis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ext&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Italy&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Dati migrati' id='Migrated Data'>
            <properties context=''>
              <relation connection='textscan.1peu69w0hgeinl14ei0oc1fnu8oe' name='time.csv' table='[time#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=',' text-qualifier='&quot;'>
                  <column datatype='integer' name='cardinality' ordinal='0' />
                  <column datatype='real' name='coverage' ordinal='1' />
                  <column datatype='string' name='dataset' ordinal='2' />
                  <column datatype='string' name='executionplan' ordinal='3' />
                  <column datatype='integer' name='id' ordinal='4' />
                  <column datatype='string' name='intention' ordinal='5' />
                  <column datatype='integer' name='intention_characters' ordinal='6' />
                  <column datatype='real' name='intersection' ordinal='7' />
                  <column datatype='integer' name='pivot_time' ordinal='8' />
                  <column datatype='real' name='query_bytes' ordinal='9' />
                  <column datatype='real' name='query_characters' ordinal='10' />
                  <column datatype='real' name='query_cost' ordinal='11' />
                  <column datatype='real' name='query_rows' ordinal='12' />
                  <column datatype='integer' name='run' ordinal='13' />
                  <column datatype='string' name='sessionid' ordinal='14' />
                  <column datatype='integer' name='time_interest' ordinal='15' />
                  <column datatype='integer' name='time_model' ordinal='16' />
                  <column datatype='integer' name='time_query' ordinal='17' />
                  <column datatype='string' name='version' ordinal='18' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='card vs time'>
      <table>
        <view>
          <datasources>
            <datasource caption='time' name='federated.0rx6gh51oaq0w71bple9h1urt0jj' />
          </datasources>
          <datasource-dependencies datasource='federated.0rx6gh51oaq0w71bple9h1urt0jj'>
            <column-instance column='[pivot_time]' derivation='Avg' name='[avg:pivot_time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time_interest]' derivation='Avg' name='[avg:time_interest:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time_model]' derivation='Avg' name='[avg:time_model:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time_query]' derivation='Avg' name='[avg:time_query:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Cardinality' datatype='integer' name='[cardinality]' role='dimension' type='ordinal' />
            <column caption='Dataset' datatype='string' name='[dataset]' role='dimension' type='nominal' />
            <column-instance column='[cardinality]' derivation='None' name='[none:cardinality:ok]' pivot='key' type='ordinal' />
            <column-instance column='[dataset]' derivation='None' name='[none:dataset:nk]' pivot='key' type='nominal' />
            <column caption='Pivot Time' datatype='integer' name='[pivot_time]' role='measure' type='quantitative' />
            <column caption='Time Interest' datatype='integer' name='[time_interest]' role='measure' type='quantitative' />
            <column caption='Time Model' datatype='integer' name='[time_model]' role='measure' type='quantitative' />
            <column caption='Time Query' datatype='integer' name='[time_query]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:time_query:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:time_model:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:time_interest:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:pivot_time:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:time_query:qk]&quot;</bucket>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:time_model:qk]&quot;</bucket>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:time_interest:qk]&quot;</bucket>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:pivot_time:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[Multiple Values]</rows>
        <cols>([federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:dataset:nk] / ([federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names] / [federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:cardinality:ok]))</cols>
      </table>
      <simple-id uuid='{6C964A82-696F-45D9-9BD9-17D9FED5D496}' />
    </worksheet>
    <worksheet name='card vs time1'>
      <table>
        <view>
          <datasources>
            <datasource caption='time' name='federated.0rx6gh51oaq0w71bple9h1urt0jj' />
          </datasources>
          <datasource-dependencies datasource='federated.0rx6gh51oaq0w71bple9h1urt0jj'>
            <column-instance column='[pivot_time]' derivation='Avg' name='[avg:pivot_time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time_interest]' derivation='Avg' name='[avg:time_interest:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time_model]' derivation='Avg' name='[avg:time_model:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time_query]' derivation='Avg' name='[avg:time_query:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Cardinality' datatype='integer' name='[cardinality]' role='dimension' type='ordinal' />
            <column caption='Dataset' datatype='string' name='[dataset]' role='dimension' type='nominal' />
            <column-instance column='[cardinality]' derivation='None' name='[none:cardinality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dataset]' derivation='None' name='[none:dataset:nk]' pivot='key' type='nominal' />
            <column caption='Pivot Time' datatype='integer' name='[pivot_time]' role='measure' type='quantitative' />
            <column caption='Time Interest' datatype='integer' name='[time_interest]' role='measure' type='quantitative' />
            <column caption='Time Model' datatype='integer' name='[time_model]' role='measure' type='quantitative' />
            <column caption='Time Query' datatype='integer' name='[time_query]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:time_query:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:time_model:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:time_interest:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:pivot_time:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:time_query:qk]&quot;</bucket>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:time_model:qk]&quot;</bucket>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:time_interest:qk]&quot;</bucket>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:pivot_time:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[Multiple Values]</rows>
        <cols>(([federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:dataset:nk] / [federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names]) * [federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:cardinality:qk])</cols>
      </table>
      <simple-id uuid='{F04B7E58-FFED-4538-A6F9-9AF8D1AE2DF7}' />
    </worksheet>
    <worksheet name='character complexity'>
      <table>
        <view>
          <datasources>
            <datasource caption='time' name='federated.0rx6gh51oaq0w71bple9h1urt0jj' />
          </datasources>
          <datasource-dependencies datasource='federated.0rx6gh51oaq0w71bple9h1urt0jj'>
            <column-instance column='[intention_characters]' derivation='Avg' name='[avg:intention_characters:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pivot_time]' derivation='Avg' name='[avg:pivot_time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[query_characters]' derivation='Avg' name='[avg:query_characters:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time_interest]' derivation='Avg' name='[avg:time_interest:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time_model]' derivation='Avg' name='[avg:time_model:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time_query]' derivation='Avg' name='[avg:time_query:qk]' pivot='key' type='quantitative' />
            <column caption='Dataset' datatype='string' name='[dataset]' role='dimension' type='nominal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[intention_characters]' role='measure' type='quantitative' />
            <column-instance column='[dataset]' derivation='None' name='[none:dataset:nk]' pivot='key' type='nominal' />
            <column-instance column='[id]' derivation='None' name='[none:id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[sessionid]' derivation='None' name='[none:sessionid:nk]' pivot='key' type='nominal' />
            <column caption='Pivot Time' datatype='integer' name='[pivot_time]' role='measure' type='quantitative' />
            <column datatype='real' name='[query_characters]' role='measure' type='quantitative' />
            <column datatype='string' name='[sessionid]' role='dimension' type='nominal' />
            <column caption='Time Interest' datatype='integer' name='[time_interest]' role='measure' type='quantitative' />
            <column caption='Time Model' datatype='integer' name='[time_model]' role='measure' type='quantitative' />
            <column caption='Time Query' datatype='integer' name='[time_query]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:intention_characters:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:query_characters:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:time_query:qk]&quot;</bucket>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:time_model:qk]&quot;</bucket>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:time_interest:qk]&quot;</bucket>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:pivot_time:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:id:ok]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:id:ok]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names]' />
              <text column='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>(([federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:dataset:nk] / ([federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:sessionid:nk] / [federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:id:ok])) * [federated.0rx6gh51oaq0w71bple9h1urt0jj].[Multiple Values])</rows>
        <cols>([federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names] / [federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{8E6F65F3-CAB6-4F84-82D7-417BFC269400}' />
    </worksheet>
    <worksheet name='id vs coverage'>
      <table>
        <view>
          <datasources>
            <datasource caption='time' name='federated.0rx6gh51oaq0w71bple9h1urt0jj' />
          </datasources>
          <datasource-dependencies datasource='federated.0rx6gh51oaq0w71bple9h1urt0jj'>
            <column-instance column='[coverage]' derivation='Attribute' name='[attr:coverage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coverage]' derivation='Avg' name='[avg:coverage:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[coverage]' role='measure' type='quantitative' />
            <column caption='Dataset' datatype='string' name='[dataset]' role='dimension' type='nominal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[dataset]' derivation='None' name='[none:dataset:nk]' pivot='key' type='nominal' />
            <column-instance column='[id]' derivation='None' name='[none:id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[sessionid]' derivation='None' name='[none:sessionid:nk]' pivot='key' type='nominal' />
            <column-instance column='[version]' derivation='None' name='[none:version:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[sessionid]' role='dimension' type='nominal' />
            <column datatype='string' name='[version]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[attr:coverage:qk]' included-values='in-range'>
            <min>0.0</min>
          </filter>
          <slices>
            <column>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[attr:coverage:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:version:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:dataset:nk] / ([federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:sessionid:nk] / ([federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:version:nk] / [federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:id:ok])))</rows>
        <cols>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:coverage:qk]</cols>
      </table>
      <simple-id uuid='{DC221AE5-A422-446C-87C3-ADA2E4ED1B47}' />
    </worksheet>
    <worksheet name='interestingness coverage'>
      <table>
        <view>
          <datasources>
            <datasource caption='time' name='federated.0rx6gh51oaq0w71bple9h1urt0jj' />
          </datasources>
          <datasource-dependencies datasource='federated.0rx6gh51oaq0w71bple9h1urt0jj'>
            <_.fcp.ObjectModelTableType.true...column caption='Dati migrati' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Migrated Data]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Migrated Data:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coverage]' derivation='Avg' name='[avg:coverage:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[coverage]' role='measure' type='quantitative' />
            <column caption='Dataset' datatype='string' name='[dataset]' role='dimension' type='nominal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[coverage]' derivation='None' name='[none:coverage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dataset]' derivation='None' name='[none:dataset:nk]' pivot='key' type='nominal' />
            <column-instance column='[id]' derivation='None' name='[none:id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[sessionid]' derivation='None' name='[none:sessionid:nk]' pivot='key' type='nominal' />
            <column-instance column='[version]' derivation='None' name='[none:version:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[sessionid]' role='dimension' type='nominal' />
            <column datatype='string' name='[version]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='Dati migrati' datatype='integer' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:coverage:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>1.0</max>
          </filter>
          <filter class='categorical' column='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:dataset:nk]'>
            <groupfilter function='member' level='[none:dataset:nk]' member='&quot;COVID-19&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:sessionid:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:sessionid:nk]' member='&quot;covid0&quot;' />
              <groupfilter function='member' level='[none:sessionid:nk]' member='&quot;covid1&quot;' />
              <groupfilter function='member' level='[none:sessionid:nk]' member='&quot;covid2&quot;' />
              <groupfilter function='member' level='[none:sessionid:nk]' member='&quot;covid3&quot;' />
              <groupfilter function='member' level='[none:sessionid:nk]' member='&quot;covid4&quot;' />
              <groupfilter function='member' level='[none:sessionid:nk]' member='&quot;covid5&quot;' />
              <groupfilter function='member' level='[none:sessionid:nk]' member='&quot;random0&quot;' />
              <groupfilter function='member' level='[none:sessionid:nk]' member='&quot;random1&quot;' />
              <groupfilter function='member' level='[none:sessionid:nk]' member='&quot;random2&quot;' />
              <groupfilter function='member' level='[none:sessionid:nk]' member='&quot;random3&quot;' />
              <groupfilter function='member' level='[none:sessionid:nk]' member='&quot;random4&quot;' />
              <groupfilter function='member' level='[none:sessionid:nk]' member='&quot;random5&quot;' />
              <groupfilter function='member' level='[none:sessionid:nk]' member='&quot;random6&quot;' />
              <groupfilter function='member' level='[none:sessionid:nk]' member='&quot;random7&quot;' />
              <groupfilter function='member' level='[none:sessionid:nk]' member='&quot;random8&quot;' />
              <groupfilter function='member' level='[none:sessionid:nk]' member='&quot;random9&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:coverage:qk]</column>
            <column>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:sessionid:nk]</column>
            <column>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:dataset:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:version:nk]' />
              <text column='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:coverage:qk]' />
              <text column='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[__tableau_internal_object_id__].[cnt:Migrated Data:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:coverage:qk]</rows>
        <cols>([federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:id:ok] / [federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:version:nk])</cols>
      </table>
      <simple-id uuid='{AECF0EBE-C4A3-4882-A469-AECC028011AA}' />
    </worksheet>
    <worksheet name='time complexity'>
      <table>
        <view>
          <datasources>
            <datasource caption='time' name='federated.0rx6gh51oaq0w71bple9h1urt0jj' />
          </datasources>
          <datasource-dependencies datasource='federated.0rx6gh51oaq0w71bple9h1urt0jj'>
            <column-instance column='[pivot_time]' derivation='Avg' name='[avg:pivot_time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time_model]' derivation='Avg' name='[avg:time_model:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time_query]' derivation='Avg' name='[avg:time_query:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Cardinality' datatype='integer' name='[cardinality]' role='dimension' type='ordinal' />
            <column caption='Dataset' datatype='string' name='[dataset]' role='dimension' type='nominal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[time_interest]' derivation='Median' name='[med:time_interest:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cardinality]' derivation='None' name='[none:cardinality:ok]' pivot='key' type='ordinal' />
            <column-instance column='[dataset]' derivation='None' name='[none:dataset:nk]' pivot='key' type='nominal' />
            <column-instance column='[id]' derivation='None' name='[none:id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[sessionid]' derivation='None' name='[none:sessionid:nk]' pivot='key' type='nominal' />
            <column caption='Pivot Time' datatype='integer' name='[pivot_time]' role='measure' type='quantitative' />
            <column datatype='string' name='[sessionid]' role='dimension' type='nominal' />
            <column caption='Time Interest' datatype='integer' name='[time_interest]' role='measure' type='quantitative' />
            <column caption='Time Model' datatype='integer' name='[time_model]' role='measure' type='quantitative' />
            <column caption='Time Query' datatype='integer' name='[time_query]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:time_query:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:time_model:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[med:time_interest:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:pivot_time:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:time_query:qk]&quot;</bucket>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:time_model:qk]&quot;</bucket>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[med:time_interest:qk]&quot;</bucket>
              <bucket>&quot;[federated.0rx6gh51oaq0w71bple9h1urt0jj].[avg:pivot_time:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:id:ok]' direction='ASC' measure-to-sort-by='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:id:ok]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[Multiple Values]' field-type='quantitative' scale='log' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names]' />
              <text column='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>(([federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:dataset:nk] / ([federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:sessionid:nk] / ([federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:id:ok] / [federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:cardinality:ok]))) * [federated.0rx6gh51oaq0w71bple9h1urt0jj].[Multiple Values])</rows>
        <cols total='true'>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{5FFD4EA9-0890-4248-AF1A-F96C8806D5C0}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='time complexity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names]</field>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:cardinality:ok]</field>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:dataset:nk]</field>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:id:ok]</field>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:sessionid:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9C7E07EF-14F4-413A-ADB7-8AFDED063B4C}' />
    </window>
    <window class='worksheet' name='character complexity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names]</field>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:cardinality:ok]</field>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:dataset:nk]</field>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:id:ok]</field>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:sessionid:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2BFFC192-2763-46D4-9A12-5BB3E8DD5A31}' />
    </window>
    <window class='worksheet' maximized='true' name='interestingness coverage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:version:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:coverage:qk]</field>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:dataset:nk]</field>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:id:ok]</field>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:sessionid:nk]</field>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:version:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F054253B-6CE9-4525-8797-1592FF9BEE76}' />
    </window>
    <window class='worksheet' name='id vs coverage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:version:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names]</field>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:cardinality:ok]</field>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:dataset:nk]</field>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:id:ok]</field>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:sessionid:nk]</field>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:version:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{198B58EE-BAE7-4D53-9F89-E4BD5D71A935}' />
    </window>
    <window class='worksheet' name='card vs time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names]</field>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:cardinality:ok]</field>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:dataset:nk]</field>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6FE1CC0D-7FA2-4C35-8D5F-CCE2B821A1C7}' />
    </window>
    <window class='worksheet' name='card vs time1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[:Measure Names]</field>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:cardinality:ok]</field>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:dataset:nk]</field>
            <field>[federated.0rx6gh51oaq0w71bple9h1urt0jj].[none:id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1D196F6F-4AE0-4C7A-A9E4-8D293DF1EB87}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='card vs time' width='192'>
      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
      kB9QAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='card vs time1' width='192'>
      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
      orFP+FDzCQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='character complexity' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='id vs coverage' width='192'>
      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
      viu8AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='interestingness coverage' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='time complexity' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
